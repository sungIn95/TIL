# import math

# N = int(input())
# N %= 1500000
# f_root = math.sqrt(5)

# answer = (1 / f_root) * ((((1 + f_root) / 2) ** N) - (((1 - f_root) / 2) ** N))
# answer %= 1000000
# print(round(answer))
# # 왜 틀리는 거지?
# 17
# 1597.000000000001
# 파이썬은 0과1로 표현되기 때문에 나누기(/)를 사용할때 약간의 차이가 발생하게 되는데
# 1000
# 43466557686938914862637500386755014010958388901725051132915256476112292920052539720295234060457458057800732025086130975998716977051839168242483814062805283311821051327273518050882075662659534523370463746326528
# 이렇게 큰 수를 부르게 되면 차이가 꽤 커진다. 그래서 일반항을 쓰는 방법은 적절하지 않았던거 같다.
# 대신 지금과 같이 DP형식으로 불러와야 차이를 교정해 줄 수 있다.

N = int(input())

mod = 1000000
fibo = [0, 1]
# 피사노 주기
p = mod // 10 * 15

for i in range(2, p):
    fibo.append(fibo[i - 1] + fibo[i - 2])
    fibo[i] %= mod

print(fibo[N % p])
