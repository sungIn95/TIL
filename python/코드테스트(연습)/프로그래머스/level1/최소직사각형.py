# 문제 설명
# 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.

# 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
# 2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
# 3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...

# 1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.

# 제한 조건
# 시험은 최대 10,000 문제로 구성되어있습니다.
# 문제의 정답은 1, 2, 3, 4, 5중 하나입니다.
# 가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.
# 입출력 예
# answers	return
# [1,2,3,4,5]	[1]
# [1,3,2,4,2]	[1,2,3]
# 입출력 예 설명
# 입출력 예 #1

# 수포자 1은 모든 문제를 맞혔습니다.
# 수포자 2는 모든 문제를 틀렸습니다.
# 수포자 3은 모든 문제를 틀렸습니다.
# 따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.

# 입출력 예 #2

# 모든 사람이 2문제씩을 맞췄습니다.


def solution(answers):
    # 수포자 1,2,3
    case_one = [1, 2, 3, 4, 5]
    case_two = [2, 1, 2, 3, 2, 4, 2, 5]
    case_three = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    # n정답 길이
    n = len(answers)

    i = 0
    # [[0, 1], [0, 2], [0, 3]...[맞힌갯수, n번째 학생]]
    answer = [[0, 1], [0, 2], [0, 3]]
    while i != n:
        if answers[i] == case_one[i % 5]:
            answer[0][0] += 1
        if answers[i] == case_two[i % 8]:
            answer[1][0] += 1
        if answers[i] == case_three[i % 10]:
            answer[2][0] += 1
        i += 1
    # lamdab를 사용하는게 정석이겠지만, 잘 모르니까...
    answer.sort()
    answer.reverse()
    answer2 = []
    # 체크는 제일 많이 맞힌 갯수
    check = answer[0][0]
    for i, j in answer:
        # 체크와 같으면 모두 정답이다
        if i == check:
            answer2.append(j)
    # 답은 정렬해야 하므로
    answer2.sort()

    # print(answer)

    return answer2
